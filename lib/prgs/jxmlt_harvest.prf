<?php

function jxmlt_harvest§§prg§_§var_def(&$task_prg§_§var) {
	$task_prg§_§var->righe_vis = 1;
	$task_prg§_§var->definisci("log_txt", "_o2text");
	$task_prg§_§var->definisci("prg_idx", "_o2number");
	$task_prg§_§var->definisci("prgs_list", "_o2structure");
	$task_prg§_§var->definisci("start_time", "_o2sid");
	$task_prg§_§var->definisci("tot_prgs", "_o2number");
		}

function jxmlt_harvest§§prgs_def(&$task_prgs, $_o2viewalias = "") {
	$task_prgs->righe_vis = 10;

	$task_prgs->usa_file("jx_translations","prgs","lang_ctrl",null,null);
	$task_prgs->usa_file_link("jx_translations","prg_unique","lang_ctrl",null,null);

	$task_prgs->unisci("prg_unique_mlt_lang_join_","prg_unique","mlt_lang","jxmlt_harvest_exp_8()","jxmlt_harvest_exp_8()",null,null);
	$task_prgs->unisci("prg_unique_mlt_prg_join_","prg_unique","mlt_prg","jxmlt_harvest_exp_9()","jxmlt_harvest_exp_9()",null,null);

	$task_prgs->usa("mlt_lang","prgs","mlt_lang",null,null,null,null);
	$task_prgs->usa("mlt_prg","prgs","mlt_prg",null,null,null,null);
	$task_prgs->usa("mlt_ctrl","prgs","mlt_ctrl",null,null,null,null);
	$task_prgs->usa("mlt_property","prgs","mlt_property",null,null,null,null);
	$task_prgs->usa("mlt_prop_value","prgs","mlt_prop_value",null,null,null,null);
	$task_prgs->usa("link_ctrl","prg_unique","mlt_ctrl",null,null,null,null);
	$task_prgs->usa("link_property","prg_unique","mlt_property",null,null,null,null);
	$task_prgs->usa("link_prop_value","prg_unique","mlt_prop_value",null,null,null,null);
	$task_prgs->calcola("check_unique", "jxmlt_harvest_exp_10()",null,null,"jxmlt_harvest_exp_11()",null);
}

function jxmlt_harvest§§check_update_act(&$o2exe) {
	$o2exe->s(1) && (jxmlt_harvest_exp_17() || $o2exe->e()) && o2act::set("prg§_§var", "prgs_list", jxmlt_harvest_exp_14()) && $o2exe->e();
	$o2exe->s(2) && True && o2act::set("prg§_§var", "prg_idx", jxmlt_harvest_exp_16()) && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest§§harvest_menu_act(&$o2exe) {
	$o2exe->s(1) && True && o2act::set("prg§_§var", "prgs_list", jxmlt_harvest_exp_5()) && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest§§harvest_prg_act(&$o2exe) {
	$o2exe->s(1) && True && o2act::set("prg§_§var", "prgs_list", jxmlt_harvest_exp_4()) && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest§§harvest_repos_act(&$o2exe) {
	$o2exe->s(1) && True && o2act::script(jxmlt_harvest_exp_19()) && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest§§harvest_update_act(&$o2exe) {
	$o2exe->s(1) && True && o2act::set("prg§_§var", "tot_prgs", jxmlt_harvest_exp_12()) && $o2exe->e();
	$o2exe->s(2) && True && o2act::set("prg§_§var", "prg_idx", jxmlt_harvest_exp_13()) && $o2exe->e();
	$o2exe->s(3) && True && o2act::exe("check_update", False, "prgs") && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest§§start_act(&$o2exe) {
	$o2exe->s(1) && True && o2act::set("prg§_§var", "start_time", jxmlt_harvest_exp_7()) && $o2exe->e();
	$o2exe->s(2) && True && o2act::set("prg§_§var", "prgs_list", jxmlt_harvest_exp_15()) && $o2exe->e();
	$o2exe->s(3) && (jxmlt_harvest_exp_1() || $o2exe->e()) && o2act::exe("harvest_prg", True, "") && $o2exe->e();
	$o2exe->s(4) && (jxmlt_harvest_exp_2() || $o2exe->e()) && o2act::exe("harvest_menu", True, "") && $o2exe->e();
	$o2exe->s(5) && (jxmlt_harvest_exp_3() || $o2exe->e()) && o2act::exe("harvest_update", True, "") && $o2exe->e();
	$o2exe->s(6) && (jxmlt_harvest_exp_18() || $o2exe->e()) && o2act::exe("harvest_repos", True, "") && $o2exe->e();
	$o2exe->s(7) && True && o2act::script(jxmlt_harvest_exp_6()) && $o2exe->e();
	} //|o2_fine_act|

function jxmlt_harvest_exp_1() {
	
return (o2par(1) == 'P');
	} //|o2_fine_exp|

function jxmlt_harvest_exp_2() {
	
return (o2par(1) == 'M');
	} //|o2_fine_exp|

function jxmlt_harvest_exp_3() {
	
return (o2par(1) == 'U');
	} //|o2_fine_exp|

function jxmlt_harvest_exp_4() {
	$prg_name = o2par(2);
$insp     = new o2_inspector();
if (o2par(3)) {
   $prgs = $insp->get_prgs_by_prg($prg_name, o2par(4)); 
   }
else {
   $prgs = array($prg_name);
   }
$tot = count($prgs);
$idx = 1;   
foreach ($prgs as $prg) {
   o2job_set_progress($idx * 100 / $tot);
   $insp->mlt_harvest($prg);
   $idx++;
   }
return ($prgs);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_5() {
	$menu = o2par(2); 
$desc = o2par(3);
$lev  = o2par(4);
$insp = new o2_inspector();
$mps  = $insp->get_prgs_by_menu($menu);
$done = $mps;
$done = array();
$tot  = count($mps) * ($desc ? $lev + 3 : 1);
$idx  = 1;
foreach ($mps as $mp) {
   if ($desc) {
      $prgs = $insp->get_prgs_by_prg($mp, $lev, $done);
      }
   elseif (!in_array($mp, $done)) {
      $prgs = array($mp);
      }
   else {
      $prgs = array();
      }
   $tot+= count($prgs);
   foreach ($prgs as $prg) {
      o2job_set_progress($idx * 100 / $tot);
      $insp->mlt_harvest($prg);
      $idx++;
      }
   $done+= $prgs;    
   }
o2job_set_progress(100);
return ($done);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_6() {
	$mode  = o2par(1);
$item  = o2par(2);
$desc  = o2par(3);
$descl = o2par(4);
$prgs  = o2val('prg§_§var','prgs_list'); 
$time  = time() - o2val('prg§_§var','start_time');
$error = o2error_getlastcode();
$txt   = date('d.m.Y H:m:s').
         ' - From '.($mode == 'P' ? 'program "'.$item.'"' : 
                    ($mode == 'M' ? 'menu "'.$item.'"' : 
                    ($mode == 'R' ? 'repositories' : 'updates'))).
         ($desc && ($mode != 'U') && ($mode != 'R') ? 
          ' (descending '.($descl ? $descl : 'all').' levels)' : '')."\n".
         ($mode == 'R' ? 'Repositories harvested' :       
          count($prgs).' programs harvested ').
         ($error ? '(with errors) ' : '').'in '.$time." sec.\n".
         ' '.implode("\n ", $prgs)."\nLog end\n\n";
if (o2session_is_job()) {
   $log = o2app_dir_logs().'mlt_harvest_'.date('YmdHis').'.log';
   file_put_contents($log, $txt);
   o2job_add_file($log);
   }         
elseif (o2rnt_interface() == 'BAT') {
   print "\n\n".$txt;
   }
return (true);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_7() {
	
return (time());
	} //|o2_fine_exp|

function jxmlt_harvest_exp_8() {
	
return (o2val('prgs','mlt_lang'));
	} //|o2_fine_exp|

function jxmlt_harvest_exp_9() {
	
return (o2val('prgs','mlt_prg'));
	} //|o2_fine_exp|

function jxmlt_harvest_exp_10() {
	$c = (o2val('prgs','mlt_ctrl') == o2val('prgs','link_ctrl')) && 
     (o2val('prgs','mlt_property') == o2val('prgs','link_property')) &&
     (o2val('prgs','mlt_prop_value') == o2val('prgs','link_prop_value'));
return ($c);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_11() {
	
return (false);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_12() {
	
return (o2view_total("prgs"));
	} //|o2_fine_exp|

function jxmlt_harvest_exp_13() {
	
return (1);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_14() {
	$insp = new o2_inspector();
$done = o2val('prg§_§var','prgs_list');
$prg  = o2val('prgs','mlt_prg');
$insp->mlt_harvest($prg);
$done[] = $prg;
return ($done);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_15() {
	
return (array());
	} //|o2_fine_exp|

function jxmlt_harvest_exp_16() {
	$tot = o2val('prg§_§var','tot_prgs');
$idx = o2val('prg§_§var','prg_idx');
o2job_set_progress($idx * 100 / $tot);
$idx++;
return ($idx);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_17() {
	$p = o2val('prgs','mlt_prg'); 
$c = false;
$l = o2par(5);
/* __________________________________ Get production date from dictionary ___ */
$f = file_get_contents(o2app_dir_home().'lang'.DIRECTORY_SEPARATOR.$l.
                       DIRECTORY_SEPARATOR.$p.'.lng');
$a = array();
preg_match('/;\s*Date:\s*(\d\d)\W(\d\d)\W(\d\d\d\d)/', $f, $a);
$dd = $a[3].$a[2].$a[1];
/* _____________________________________________ Get modify date from prf ___ */
$md = o2file_date(o2app_dir_prgs().$p.'.prf');
$c  = ($md >= $dd);
return ($c);
	} //|o2_fine_exp|

function jxmlt_harvest_exp_18() {
	
return (o2par(1) == 'R');
	} //|o2_fine_exp|

function jxmlt_harvest_exp_19() {
	$insp = new o2_inspector();
$insp->mlt_harvest_models();
$insp->mlt_harvest_menu();
return (true);
	} //|o2_fine_exp|
?>
